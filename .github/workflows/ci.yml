name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, dev]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: app/package-lock.json
      
      - name: Install dependencies
        working-directory: ./app
        run: npm ci
      
      - name: Generate Prisma client
        working-directory: ./app
        run: npm run client:generate
      
      - name: Run linting
        working-directory: ./app
        run: npm run lint
        continue-on-error: true # Don't fail the build on lint errors for now
      
      - name: Run tests
        working-directory: ./app
        run: npm run test -- --run
      
      - name: Run tests with coverage
        if: matrix.os == 'ubuntu-latest'
        working-directory: ./app
        run: npm run test:coverage
      
      - name: Upload coverage reports
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-node-${{ matrix.node-version }}
          path: app/coverage/
      
      - name: Comment coverage on PR
        if: github.event_name == 'pull_request' && matrix.os == 'ubuntu-latest' && matrix.node-version == '18.x'
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          working-directory: ./app
          vite-config-path: ./vitest.config.ts

  format-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: app/package-lock.json
      
      - name: Install Prettier
        working-directory: ./app
        run: npm install --save-dev prettier
      
      - name: Check formatting
        working-directory: ./app
        run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"
        continue-on-error: true # Don't fail for now since prettier isn't configured yet

  build:
    runs-on: ${{ matrix.os }}
    needs: test
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: app/package-lock.json
      
      - name: Install dependencies
        working-directory: ./app
        run: npm ci
      
      - name: Generate Prisma client
        working-directory: ./app
        run: npm run client:generate
      
      - name: Build application
        working-directory: ./app
        run: npm run package
        continue-on-error: true # Package might fail without native deps